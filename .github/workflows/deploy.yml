# This is a basic workflow to help you get started with Actions

name: Deploy Containers

env:
  DEPLOYMENT_MODE: ContainerApps #Aks / ContainerApps

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  ### Infrastructure (bicep) ### - This could be moved out and run only on infra changes
  infrastructure-aks:
    runs-on: ubuntu-latest
    #if: ${{ env.TEST_SKIP == 'false' }}
    if: ${{ env.DEPLOYMENT_MODE == 'Aks' }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
  
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy cluster with bicep
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: 490eb18c-41ab-4b43-bfe8-334a4d8c8a33
          resourceGroupName: AksDeployment
          template: ./aks.bicep
          deploymentMode: Incremental

  infrastructure-containerapps:
    runs-on: ubuntu-latest
    if: ${{ env.DEPLOYMENT_MODE == 'ContainerApps' }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
  
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy infrastructure with bicep
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: 490eb18c-41ab-4b43-bfe8-334a4d8c8a33
          resourceGroupName: ContainerAppDeployment
          template: ./main.bicep
          deploymentMode: Incremental
          failOnStdErr: false #sucks to have to do this, but in container app incorrectly fails validation (due to warning), causing the workflow to bomb out


  #### Lucky number service ####
  luckynum-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
                  
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: LuckyNumberGenerator
          file: LuckyNumberGenerator/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-luckynum:latest
                
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  luckynum-containerapps:
    runs-on: ubuntu-latest
    if: ${{ env.DEPLOYMENT_MODE == 'ContainerApps' }}
    needs: [infrastructure-containerapps, luckynum-docker]

    steps:
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create container app revision
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update -g ContainerAppDeployment -n deploy-options-luckynum -i docker.io/filterniels/deploy-options-luckynum:latest --yaml ./LuckyNumberGenerator/container-app.yml

  luckynum-aks:
    runs-on: ubuntu-latest
    if: ${{ env.DEPLOYMENT_MODE == 'Aks' }}
    needs: [infrastructure-aks, luckynum-docker]

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
                  
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: LuckyNumberGenerator
          file: LuckyNumberGenerator/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-luckynum:latest
                
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


  ### Web Api service ###
  webapi-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: WebApi
          file: WebApi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-webapi:latest
          
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  webapi-containerapps:
    runs-on: ubuntu-latest
    if: ${{ env.DEPLOYMENT_MODE == 'ContainerApps' }}
    needs: [infrastructure-containerapps, webapi-docker]

    steps:
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create container app revision
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update -g ContainerAppDeployment -n deploy-options-webapi -i docker.io/filterniels/deploy-options-webapi:latest --yaml ./WebApi/container-app.yml

  #### Front end (angular) service ####     
  angular-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
                  
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: Angular
          file: Angular/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-angular:latest
          
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  angular-containerapps:
    runs-on: ubuntu-latest
    if: ${{ env.DEPLOYMENT_MODE == 'ContainerApps' }}
    needs: [infrastructure-containerapps, angular-docker]

    steps:
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create container app revision
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update -g ContainerAppDeployment -n deploy-options-angular -i docker.io/filterniels/deploy-options-angular:latest --yaml ./Angular/container-app.yml