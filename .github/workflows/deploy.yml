name: Deploy Containers

env:
  CONTAINER_APPS: false
  AKS: true 
  LUCKYNUM: true 
  WEBAPI: false 
  ANGULAR: false 
  CLUSTER_NAME: deploy-aks-cluster
  CLUSTER_RESOURCE_GROUP: AksDeployment

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  deployment-context:
    runs-on: ubuntu-latest
    outputs:
      containerapps: ${{ steps.set_outputs.outputs.containerapps }}
      aks: ${{ steps.set_outputs.outputs.aks }}
      luckynum: ${{ steps.set_outputs.outputs.luckynum }}
      webapi: ${{ steps.set_outputs.outputs.webapi }}
      angular: ${{ steps.set_outputs.outputs.angular }}
    steps:
      - id: set_outputs
        run: |
          echo "::set-output name=containerapps::${{ env.CONTAINER_APPS }}";
          echo "::set-output name=aks::${{ env.AKS }}";
          echo "::set-output name=luckynum::${{ env.LUCKYNUM }}";
          echo "::set-output name=webapi::${{ env.WEBAPI }}";
          echo "::set-output name=angular::${{ env.ANGULAR }}";

  #### Lucky number service ####
  luckynum-docker:
    runs-on: ubuntu-latest
    needs: deployment-context
    if: needs.deployment-context.outputs.luckynum == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
                  
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: LuckyNumberGenerator
          file: LuckyNumberGenerator/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-luckynum:latest
                
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  luckynum-containerapps:
    runs-on: ubuntu-latest
    needs: [deployment-context,luckynum-docker]
    if: needs.deployment-context.outputs.containerapps == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create container app revision
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update -g ContainerAppDeployment -n deploy-options-luckynum -i docker.io/filterniels/deploy-options-luckynum:latest --yaml ./LuckyNumberGenerator/container-app.yml

  luckynum-aks:
    runs-on: ubuntu-latest
    needs: [deployment-context,luckynum-docker]
    if: needs.deployment-context.outputs.aks == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
                
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v3.1
        with:
          manifests: ./LuckyNumberGenerator/aks-deployment.yml

  ### Web Api service ###
  webapi-docker:
    runs-on: ubuntu-latest
    needs: deployment-context
    if: needs.deployment-context.outputs.webapi == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: WebApi
          file: WebApi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-webapi:latest
          
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  webapi-containerapps:
    runs-on: ubuntu-latest
    needs: [deployment-context,webapi-docker]
    if: needs.deployment-context.outputs.aks == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create container app revision
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update -g ContainerAppDeployment -n deploy-options-webapi -i docker.io/filterniels/deploy-options-webapi:latest --yaml ./WebApi/container-app.yml

  webapi-aks:
    runs-on: ubuntu-latest
    needs: [deployment-context,webapi-docker]
    if: needs.deployment-context.outputs.aks == 'true'

    steps:                
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v3.1
        with:
          manifests: ./WebApi/aks-deployment.yml

  #### Front end (angular) service ####     
  angular-docker:
    runs-on: ubuntu-latest
    needs: deployment-context
    if: needs.deployment-context.outputs.angular == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
                  
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: Angular
          file: Angular/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-options-angular:latest
          
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  angular-containerapps:
    runs-on: ubuntu-latest
    needs: [deployment-context,angular-docker]
    if: needs.deployment-context.outputs.aks == 'true'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create container app revision
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update -g ContainerAppDeployment -n deploy-options-angular -i docker.io/filterniels/deploy-options-angular:latest --yaml ./Angular/container-app.yml

  angular-aks:
    runs-on: ubuntu-latest
    needs: [deployment-context,angular-docker]
    if: needs.deployment-context.outputs.aks == 'true'

    steps:                
      - name: Az Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v3.1
        with:
          manifests: ./Angular/aks-deployment.yml
